@using Jarboo.Admin.DAL.Entities
@using SmartAdminMvc

@{
    var currentUser = (User)ViewBag.CurrentUser;
}

<!-- Left panel : Navigation area -->
<!-- Note: This width of the aside area can be adjusted through LESS variables -->
<aside id="left-panel">

    <!-- User info -->
    @{ Html.RenderPartial("_CurrentUser"); }
    <!-- end user info -->
    <!-- NAVIGATION : This navigation is also responsive

    To make this navigation dynamic please make sure to link the node
    (the reference to the nav > ul) after page load. Or the navigation
    will not initialize.
    -->
    <nav>
        <!-- NOTE: Notice the gaps after each icon usage <i></i>..
        Please note that these links work a bit different than
        traditional href="" links. See documentation for details.
        -->

        <ul>
            @if (!User.Identity.IsAuthenticated)
            {
                <li class="@Html.RouteIf("accounts", "active")">
                    <a href="@Url.Action(MVC.Accounts.Login())" title="Login"><i class="fa fa-lg fa-fw fa-home"></i><span class="menu-item-parent">Login</span></a>
                </li>
            }
            @if (this.Can(MVC.Home.Dashboard()))
            {
                <li class="@Html.RouteIf("home", "active")">
                    <a href="@Url.Action(MVC.Home.Dashboard())" title="Dashboard"><i class="fa fa-lg fa-fw fa-home"></i><span class="menu-item-parent">Dashboard</span></a>
                </li>
            }
            @if (this.Can(MVC.Accounts.Index()))
            {
                <li class="@Html.RouteIf("accounts", "active")">
                    <a href="@Url.Action(MVC.Accounts.Index())" title="Users"><i class="fa fa-lg fa-fw fa-user"></i><span class="menu-item-parent">Users</span></a>
                </li>
            }
            @if (currentUser.CustomerId.HasValue)
            {
                <li class="@Html.RouteIf("customers", "active")">
                    <a href="@Url.Action(MVC.Customers.View(currentUser.CustomerId))" title="Projects"><i class="fa fa-lg fa-fw fa-home"></i><span class="menu-item-parent">Projects</span></a>
                </li>
            }
            @if (this.Can(MVC.Employees.ChooseForTasks()))
            {
                <li class="@Html.RouteIf("", "active")">
                    <a href="@Url.Action(MVC.Employees.ChooseForTasks())" title="Next task"><i class="fa fa-lg fa-fw fa-play"></i><span class="menu-item-parent">Next task</span></a>
                </li>
            }
            else
            {
                if (this.Can(MVC.Tasks.NextTask(null)))
                {
                    <li class="@Html.RouteIf("tasks", "active")">
                        <a href="@Url.Action(MVC.Tasks.NextTask(null))" title="Tasks"><i class="fa fa-lg fa-fw fa-pencil-square-o"></i><span class="menu-item-parent">Tasks</span></a>
                    </li>
                }
            }
            @if (this.Can(MVC.Customers.Index()))
            {
                <li class="@Html.RouteIf("customers", "active")">
                    <a href="@Url.Action(MVC.Customers.Index())" title="Customers"><i class="fa fa-lg fa-fw fa-group"></i><span class="menu-item-parent">Customers</span></a>
                </li>
            }
            @if (this.Can(MVC.Projects.Index()))
            {
                <li class="@Html.RouteIf("projects", "active")">
                    <a href="@Url.Action(MVC.Projects.Index())" title="Projects"><i class="fa fa-lg fa-fw fa-file-text-o"></i><span class="menu-item-parent">Projects</span></a>
                </li>
            }
            @if (this.Can(MVC.Tasks.Index()))
            {
                <li class="@Html.RouteIf("tasks", "active")">
                    <a href="@Url.Action(MVC.Tasks.Index())" title="Tasks"><i class="fa fa-lg fa-fw fa-pencil-square-o"></i><span class="menu-item-parent">Tasks</span></a>
                </li>
            }
            @if (this.Can(MVC.Tasks.PendingTaskView()))
            {
                <li class="@Html.RouteIf("PendingTaskView", "active")">
                    <a href="@Url.Action(MVC.Tasks.PendingTaskView())" title="Pending task"><i class="fa fa-lg fa-fw  fa-recycle"></i><span class="menu-item-parent">Pending Task</span></a>
                </li>
            }
            @if (this.Can(MVC.Employees.Index()))
            {
                <li class="@Html.RouteIf("employees", "active")">
                    <a href="@Url.Action(MVC.Employees.Index())" title="Employees"><i class="fa fa-lg fa-fw fa-list-alt"></i><span class="menu-item-parent">Employees</span></a>
                </li>
            }
            @if (this.Can(MVC.SpentTime.Index()))
            {
                <li class="@Html.RouteIf("spenttime", "active")">
                    <a href="@Url.Action(MVC.SpentTime.Index())" title="Hours"><i class="fa fa-lg fa-fw fa-clock-o"></i><span class="menu-item-parent">Hours</span></a>
                </li>
            }
            @if (this.Can(MVC.Reporting.Index()))
            {
                <li class="@Html.RouteIf("reporting", "active")">
                    <a href="@Url.Action(MVC.Reporting.Index())" title="Reporting"><i class="fa fa-lg fa-fw fa-bar-chart-o"></i><span class="menu-item-parent">Reporting</span></a>
                </li>
            }
            @if (this.Can(MVC.Documentations.Index()))
            {
                <li class="@Html.RouteIf("documentations", "active")">
                    <a href="@Url.Action(MVC.Documentations.Index())" title="Documentations"><i class="fa fa-lg fa-fw fa-stack-overflow"></i><span class="menu-item-parent">Documentations</span></a>
                </li>
            }
            @if (this.Can(MVC.Quizzes.Index()))
            {
                <li class="@Html.RouteIf("quizzes", "active")">
                    <a href="@Url.Action(MVC.Quizzes.Index())" title="Quizzes"><i class="fa fa-lg fa-fw fa-list-ul"></i><span class="menu-item-parent">Quizzes</span></a>
                </li>
            }
            @if (this.Can(MVC.Guides.Index()))
            {
                <li class="@Html.RouteIf("guides", "active")">
                    <a href="@Url.Action(MVC.Guides.Index())" title="Guide"><i class="fa fa-lg fa-fw fa-book"></i><span class="menu-item-parent">Guide</span></a>
                </li>
            }

            @if (this.Can(MVC.Settings.Edit()))
            {
                <li class="@Html.RouteIf("settings", "edit")">
                    <a href="@Url.Action(MVC.Settings.Edit())" title="Settings"><i class="fa fa-lg fa-fw fa-wrench"></i><span class="menu-item-parent">Settings</span></a>
                </li>
            }
        </ul>
    </nav>
    <span class="minifyme" data-action="minifyMenu">
        <i class="fa fa-arrow-circle-left hit"></i>
    </span>

</aside>
<!-- END NAVIGATION -->
