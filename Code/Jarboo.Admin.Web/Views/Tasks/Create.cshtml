@model Jarboo.Admin.BL.Models.TaskCreate

@{
    ViewBag.Title = "New task";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!-- RIBBON -->
<div id="ribbon">
    <span class="ribbon-button-alignment">
        <span id="refresh" class="btn btn-ribbon" data-action="resetWidgets" data-title="refresh" rel="tooltip" data-placement="bottom" data-original-title="<i class='text-warning fa fa-warning'></i> Warning! This will reset all your widget settings." data-html="true">
						<i class="fa fa-refresh"></i>
					</span>
    </span>
    <!-- breadcrumb -->
    <ol class="breadcrumb">
        @(new BreadCrumbsBuilder()
            .Add(Url.Action(MVC.Tasks.Index()), "Tasks")
            .Add("New task")
            .Done())
    </ol>
    <!-- end breadcrumb -->
</div>
<!-- END RIBBON -->
<div id="content">
    <!-- row -->
    <div class="row">
        <article class="col-sm-12 col-md-12 col-lg-7">
            <!-- Widget ID (each widget will need unique ID)-->
            <div class="jarviswidget jarviswidget-color-darken" id="wid-id-5" data-widget-colorbutton="false" data-widget-editbutton="false" data-widget-custombutton="false">
                <!-- widget options:
                usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                data-widget-colorbutton="false"
                data-widget-editbutton="false"
                data-widget-togglebutton="false"
                data-widget-deletebutton="false"
                data-widget-fullscreenbutton="false"
                data-widget-custombutton="false"
                data-widget-collapsed="true"
                data-widget-sortable="false"

                -->
                <header>
                    <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                    <h2>New </h2>
                </header>
                <!-- widget div-->
                <div>
                    <!-- widget edit box -->
                    <div class="jarviswidget-editbox">
                        <!-- This area used as dropdown edit box -->
                    </div>
                    <!-- end widget edit box -->
                    <!-- widget content -->
                    <div class="widget-body no-padding">
                        @using (Html.BeginForm("create", "tasks", FormMethod.Post, new { @id="form1", @class = "smart-form" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(false)
                            <header>
                                New Tasks
                            </header>
                            <fieldset>
                                <section>
                                    @Html.LabelFor(model => model.Title, new { @class = "label" })
                                    <label class="input">
                                        @Html.TextBoxFor(x => x.Title, new { @placeholder = "Title", @class="form-control" })
                                    </label>
                                </section>
                                <section>
                                    @Html.LabelFor(model => model.ProjectId, new { @class = "select" })
                                    <label class="select select-multiple">
                                        @Html.DropDownListFor(x => x.ProjectId, (SelectList)ViewBag.ProjectsList)
                                    </label>
                                </section>
                                <section>
                                    @Html.LabelFor(model => model.Type, new { @class = "select" })
                                    <label class="select select-multiple">
                                        @Html.EnumDropDownListFor(x => x.Type)
                                    </label>
                                </section>
                                <section>
                                    @Html.LabelFor(model => model.Size, new { @class = "label" })
                                    <label class="input">
                                        <i class="icon-append fa">hours</i>
                                        @Html.TextBoxFor(x => x.Size, new { @placeholder = "Size" })
                                    </label>
                                </section>

                                <section>
                                    @Html.LabelFor(model => model.Urgency, new { @class = "label" })
                                    <label class="select select-multiple">
                                        @Html.EnumDropDownListFor(x => x.Urgency)
                                    </label>
                                </section>

                                <section>
                                    @Html.LabelFor(model => model.EmployeeId, new { @class = "label" })
                                    <label class="select select-multiple">
                                        @Html.DropDownListFor(x => x.EmployeeId, (SelectList)ViewBag.EmployeesList, "Select automatically", new { @class = "form-control" })
                                    </label>
                                </section>
                            </fieldset>
                            <footer>
                                <button type="submit" class="btn btn-primary">
                                    Create
                                </button>
                            </footer>
                        }
                    </div>
                    <!-- end widget content -->
                </div>
                <!-- end widget div -->
            </div>
            <!-- end widget -->
        </article>
    </div>
    <!-- end row -->
</div>
@section pagespecific {
    <script type="text/javascript">
        $(document).ready(function () {
            $('#form1').validate({
                // Rules for form validation
                rules: {
                    Title: {
                        required: true
                    },
                    Size: {
                        number: true
                    }
                },

                // Messages for form validation
                messages: {
                    Title: {
                        required: 'Enter title name',
                    }
                },

                // Do not change code below
                errorPlacement: function (error, element) {
                    error.insertAfter(element.parent());
                }
            });

        });

    </script>
}